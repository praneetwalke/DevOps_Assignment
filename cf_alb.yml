---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyLoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      AvailabilityZones: !GetAZs ""
      Listeners:
        - LoadBalancerPort: "80"
          InstancePort: "80"
          Protocol: "HTTP"
      HealthCheck:
        Target: "HTTP:80/"
        HealthyThreshold: "3"
        UnhealthyThreshold: "5"
        Interval: "30"
        Timeout: "5"

  MyLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: "ami-0c55b159cbfafe1f0"  
      InstanceType: "t2.micro"
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      IamInstanceProfile: !Ref WebServerInstanceProfile
      KeyName: "mykeypair"

  MyAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties: 
      LaunchConfigurationName: !Ref MyLaunchConfiguration
      MinSize: "2"
      MaxSize: "5"
      DesiredCapacity: "2"
      LoadBalancerNames: 
        - !Ref MyLoadBalancer
      VPCZoneIdentifier: 
        - subnet-0326274eb5850abe1 
        

  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow HTTP and HTTPS traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  WebServerInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref S3AccessRole

  S3AccessRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "S3AccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - "s3:GetObject"
                Resource: 
                  - "arn:aws:s3:::my-book-0011/*"  
